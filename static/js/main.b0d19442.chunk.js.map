{"version":3,"sources":["data/axios-config.js","Components/Search/SearchPokemon.js","Components/PokemonType/Type.js","functions/functions.js","Components/PokemonCard/PokemonCard.js","Components/PokemonList/PokemonList.js","App.js","index.js"],"names":["axios","create","baseURL","headers","Accept","SearchPokemon","getPokemon","useState","value","setValue","onSubmit","e","preventDefault","className","type","onChange","currentTarget","toLowerCase","placeholder","Type","colours","typeColour","string","key","setColour","style","backgroundColor","capitalize","s","charAt","toUpperCase","slice","PokemonCard","Pokemon","name","height","types","sprite","sprites","front_default","weight","toFixed","src","alt","id","PokemonList","data","listCount","setListCount","object","count","forEach","element","addId","i","push","onClick","disabled","map","pokemon","App","obj","pokemonData","setPokemonData","setPokemon","Loading","setLoading","nameOrId","get","then","response","error","console","alert","useEffect","results","log","Object","keys","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAIeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,qCACTC,QAAS,CAELC,OAAQ,sBCwBDC,EA9BO,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACZC,mBAAS,IADG,mBAC/BC,EAD+B,KACxBC,EADwB,KActC,OACI,uBACIC,SARa,SAACC,GAClBA,EAAEC,iBACFN,EAAWE,GACXC,EAAS,KAIT,UAGI,uBAAOI,UAAU,QAAjB,wCACA,uBAAOA,UAAU,QAAjB,kCACA,uBACIC,KAAK,OACLC,SAnBS,SAACJ,GAClBF,EAASE,EAAEK,cAAcR,MAAMS,gBAmBvBT,MAAOA,EACPU,YAAY,qBCkBbC,EA5CF,SAAC,GAAc,IAAZL,EAAW,EAAXA,KAENM,EAAU,CACZ,OAAU,UACV,KAAQ,UACR,MAAS,UACT,MAAS,UACT,SAAY,UACZ,IAAO,UACP,SAAY,UACZ,OAAU,UACV,OAAU,UACV,OAAU,UACV,QAAW,UACX,IAAO,UACP,KAAQ,UACR,MAAS,UACT,KAAQ,UACR,OAAU,UACV,MAAS,UACT,MAAS,WAGTC,EAAa,GAcjB,OAXkB,SAACC,GACf,IAAK,IAAIC,KAAOH,EACRG,IAAQD,IACRD,EAAaD,EAAQG,IAMjCC,CAAUV,GAGN,qBAAKD,UAAU,UAAUY,MAAO,CAAEC,gBAAiBL,GAAnD,SACKP,KCtCAa,EAAa,SAACC,GACvB,MAAiB,kBAANA,EAAuB,GAC3BA,EAAEC,OAAO,GAAGC,cAAgBF,EAAEG,MAAM,ICwChCC,EAxCK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAEbC,EAAOP,EAAWM,EAAQC,MAC1BC,EAASF,EAAQE,OAAS,GAC1BrB,EAAOa,EAAWM,EAAQG,MAAM,GAAGtB,KAAKoB,MACxCG,EAASJ,EAAQK,QAAQC,cACzBC,GAAUP,EAAQO,OAAS,IAAIC,QAAQ,GAE7C,OACI,sBAAK5B,UAAU,OAAf,UACI,qBAAKA,UAAU,WAAW6B,IAAKL,EAAQM,IAAG,oBAAeT,KACzD,gCACI,gCACI,kCACI,+BACI,uCACA,6BAAKA,OAET,+BACI,qCACA,6BAAKD,EAAQW,QAEjB,+BACI,wCACA,+BAAKT,EAAL,UAEJ,+BACI,wCACA,+BAAKK,EAAL,gBAIZ,cAAC,EAAD,CACI1B,KAAMA,WCwBX+B,EAzDK,YAAe,IAAZC,EAAW,EAAXA,KAAW,EAEIvC,mBAAS,GAFb,mBAEvBwC,EAFuB,KAEZC,EAFY,MFIb,SAACC,GAClB,IAAIC,EAAQ,EACZD,EAAOE,SAAQ,SAAAC,GACXF,GAAS,EACTE,EAAQR,GAAKM,KEJjBG,CAAMP,GAKN,IAHA,IAAMD,EAAc,GAGXS,EAAIP,EAAWO,EAAIP,GAA2B,MAAdA,EAAoB,GAAK,IAAKO,GAAK,EACxET,EAAYU,KAAKT,EAAKQ,IAa1B,OACI,qCACI,8CACA,sBAAKzC,UAAU,eAAf,UACI,wBACI2C,QATK,WACjBR,EAAaD,EAAY,KASbU,SAAwB,IAAdV,EAFd,sBAMA,wBACIS,QApBK,WACjBR,EAAaD,EAAY,KAoBbU,SAAwB,MAAdV,EAFd,qBAOJ,qBAAKlC,UAAU,gBAAf,SACKgC,EAAYa,KAAI,SAACC,GAAD,OACb,sBAEI9C,UAAU,YAFd,UAII,mBAAGA,UAAU,OAAb,SAAqB8C,EAAQf,KAE7B,qBAAKF,IAAG,mFAA8EiB,EAAQf,GAAtF,QAAgGD,IAAG,oBAAegB,EAAQzB,QAClI,mBAAGrB,UAAU,eAAb,SAA6Bc,EAAWgC,EAAQzB,UAN3CyB,EAAQzB,eC2BtB0B,MAnEf,WAAe,IAUIC,EAVJ,EAEyBtD,mBAAS,IAFlC,mBAENuD,EAFM,KAEOC,EAFP,OAIiBxD,mBAAS,IAJ1B,mBAIN0B,EAJM,KAIG+B,EAJH,OAMiBzD,oBAAS,GAN1B,mBAMN0D,EANM,KAMGC,EANH,KAeP5D,EAAa,SAAC6D,GAClBnE,EAAMoE,IAAN,UAAaD,IAAYE,MAAK,SAAAC,GAC5BN,EAAWM,EAASxB,SACnB,SAAAyB,GACDC,QAAQD,MAAR,kBAAyBJ,EAAzB,eACAM,MAAM,WAAD,OAAYN,EAAZ,mCAuBT,OAPAO,qBAAU,WAVR1E,EAAMoE,IAAI,cAAcC,MAAK,SAAAC,GAC3BP,EAAeO,EAASxB,KAAK6B,SAC7BH,QAAQI,IAAIN,EAASxB,KAAK6B,SAC1BT,GAAW,MACV,SAAAK,GACDE,MAAM,kCAOP,IAMD,qCACE,0CACA,cAAC,EAAD,CACEnE,WAAYA,KArCDuD,EAyCH5B,EAxCuB,IAA5B4C,OAAOC,KAAKjB,GAAKkB,OAwCD,KAAO,cAAC,EAAD,CAAa9C,QAASA,KAIhDgC,EAAU,4CACV,cAAC,EAAD,CACEnB,KAAMgB,EACNxD,WAAYA,QC3DtB0E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b0d19442.chunk.js","sourcesContent":["// import the library version of axios\nimport axios from \"axios\";\n\n// create a version of axios with useful defaults\nexport default axios.create({\n    baseURL: \"https://pokeapi.co/api/v2/pokemon/\",\n    headers: {\n        // make sure we get JSON back\n        Accept: \"application/json\",\n    },\n});","import React, { useState } from \"react\";\n\nconst SearchPokemon = ({ getPokemon }) => {\n    const [value, setValue] = useState(\"\") // set initial value of search input\n\n    const handleChange = (e) => {\n        setValue(e.currentTarget.value.toLowerCase());\n        // value needs to be lowercase to match API format\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        getPokemon(value);\n        setValue(\"\");\n    };\n\n    return (\n        <form\n            onSubmit={handleSubmit}\n        >\n            <label className=\"large\"> Enter Pokemon Name or ID </label>\n            <label className=\"small\">(Id between 1 - 151)</label>\n            <input\n                type=\"text\"\n                onChange={handleChange}\n                value={value}\n                placeholder=\"pikachu / 25\"\n            />\n        </form>\n    )\n};\n\nexport default SearchPokemon;","const Type = ({ type }) => {\n    // colour logic\n    const colours = {\n        \"Normal\": \"#A8A878\",\n        \"Fire\": \"#F08030\",\n        \"Water\": \"#6890F0\",\n        \"Grass\": \"#78C850\",\n        \"Electric\": \"#F8D030\",\n        \"Ice\": \"#98D8D8\",\n        \"Fighting\": \"#C03028\",\n        \"Poison\": \"#A040A0\",\n        \"Ground\": \"#E0C068\",\n        \"Flying\": \"#A890F0\",\n        \"Psychic\": \"#F85888\",\n        \"Bug\": \"#A8B820\",\n        \"Rock\": \"#B8A038\",\n        \"Ghost\": \"#705898\",\n        \"Dark\": \"#705848\",\n        \"Dragon\": \"#7038F8\",\n        \"Steel\": \"#B8B8D0\",\n        \"Fairy\": \"#F0B6BC\",\n    };\n\n    let typeColour = \"\"\n\n    // func to set colour\n    const setColour = (string) => {\n        for (let key in colours) {\n            if (key === string) {\n                typeColour = colours[key];\n            };\n        };\n    };\n\n    // run func with prop passed into component\n    setColour(type);\n\n    return (\n        <div className=\"typeTag\" style={{ backgroundColor: typeColour }}>\n            {type}\n        </div>\n    )\n};\n\nexport default Type;\n\n","// capitalize the 1st letter of string passed in\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') return ''\n    return s.charAt(0).toUpperCase() + s.slice(1)\n};\n\n// add an id to each pokemon in the API data object\nexport const addId = (object) => {\n    let count = 0;\n    object.forEach(element => {\n        count += 1;\n        element.id = count;\n    });\n}","import Type from '../PokemonType/Type';\nimport { capitalize } from '../../functions/functions';\n\nconst PokemonCard = ({ Pokemon }) => { // Pokemon is an object of data\n\n    const name = capitalize(Pokemon.name);\n    const height = Pokemon.height / 10;\n    const type = capitalize(Pokemon.types[0].type.name);\n    const sprite = Pokemon.sprites.front_default;\n    const weight = (Pokemon.weight / 10).toFixed(0);\n\n    return (\n        <div className=\"card\">\n            <img className=\"card-img\" src={sprite} alt={`Sprite of ${name}`} />\n            <div>\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>Name:</th>\n                            <td>{name}</td>\n                        </tr>\n                        <tr>\n                            <th>Id:</th>\n                            <td>{Pokemon.id}</td>\n                        </tr>\n                        <tr>\n                            <th>Height</th>\n                            <td>{height}m</td>\n                        </tr>\n                        <tr>\n                            <th>Weight</th>\n                            <td>{weight}kg</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <Type\n                    type={type}\n                />\n            </div>\n        </div>\n    )\n};\n\nexport default PokemonCard;\n\n","import React, { useState } from 'react';\nimport { capitalize, addId } from '../../functions/functions';\n\nconst PokemonList = ({ data }) => {\n    // set state to increment pokemon displayed\n    const [listCount, setListCount] = useState(0);\n    // pass data objedt (list of pokemon) through function to add an Id to each pokemon, later used to get specific pokemon sprite\n    addId(data);\n    // set empty array to capture list of pokemon to be displayed\n    const PokemonList = [];\n\n    // loop through list count and push pokemon to Pokemonlist to be displayed\n    for (let i = listCount; i < listCount + (listCount === 140 ? 11 : 20); i += 1) {\n        PokemonList.push(data[i]);\n    };\n\n    // next list of pokemon\n    const gotoNextPage = () => {\n        setListCount(listCount + 20);\n    };\n\n    // previous list of pokemon\n    const gotoPrevPage = () => {\n        setListCount(listCount - 20);\n    };\n\n    return (\n        <>\n            <h2>Pokemon List</h2>\n            <div className=\"btnContainer\">\n                <button\n                    onClick={gotoPrevPage}\n                    disabled={listCount === 0 ? true : false}\n                >\n                    Previous\n                </button>\n                <button\n                    onClick={gotoNextPage}\n                    disabled={listCount === 140 ? true : false}\n                >\n                    Next\n                </button>\n            </div>\n            <div className=\"listContainer\">\n                {PokemonList.map((pokemon) => (\n                    <div\n                        key={pokemon.name}\n                        className=\"list-card\"\n                    >\n                        <p className=\"topL\">{pokemon.id}</p>\n                        {/* list starts at 0, whereas images start at 1, therefore index + 1 = correct pokemon Image */}\n                        <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`} alt={`sprite of ${pokemon.name}`} />\n                        <p className=\"pokemon-name\">{capitalize(pokemon.name)}</p>\n                    </div>\n                ))}\n            </div>\n        </>\n    )\n};\n\nexport default PokemonList;","import React, { useState, useEffect } from 'react';\nimport axios from './data/axios-config';\nimport SearchPokemon from './Components/Search/SearchPokemon';\nimport PokemonCard from './Components/PokemonCard/PokemonCard';\nimport PokemonList from './Components/PokemonList/PokemonList';\n\nfunction App() {\n  // List of Pokemon - initially empty arr\n  const [pokemonData, setPokemonData] = useState([]);\n  // Single Pokemon data - initial empty obj\n  const [Pokemon, setPokemon] = useState({}); // can be either number or name(lowercase)\n  // set Loading state\n  const [Loading, setLoading] = useState(true);\n\n\n  // Check if Pokemon object is empty\n  const isEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n  }\n\n  // Get a searched for pokemon\n  const getPokemon = (nameOrId) => {\n    axios.get(`${nameOrId}`).then(response => {\n      setPokemon(response.data);\n    }, error => {   // error message\n      console.error(`Pokemon ${nameOrId} not found`);\n      alert(`Pokemon ${nameOrId} not found, check spelling`)\n    });\n  };\n\n  // Get list of pokemon\n  const getPokemonList = () => {\n    axios.get(\"?limit=151\").then(response => {\n      setPokemonData(response.data.results);\n      console.log(response.data.results);\n      setLoading(false)\n    }, error => {   // error message\n      alert(\"Unable to access database\");\n    });\n  };\n\n  // Runs once on render\n  useEffect(() => {\n    getPokemonList()\n  }, []);\n\n\n\n  // Render\n  return (\n    <>\n      <h1>Pokedex!</h1>\n      <SearchPokemon\n        getPokemon={getPokemon}\n      />\n      {/* Check to see if a pokemon has been searched for */}\n      {\n        isEmpty(Pokemon) ? null : <PokemonCard Pokemon={Pokemon} />\n      }\n\n      {/* Check to see if list has loaded. If not return loading else return list of pokemon from API */}\n      { Loading ? <p>Loading....</p> :\n        <PokemonList\n          data={pokemonData}\n          getPokemon={getPokemon}\n\n        />\n      }\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}